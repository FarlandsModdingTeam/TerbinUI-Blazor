@page "/d_385_274_920"
@rendermode InteractiveServer

<PageTitle>TerbinUI</PageTitle>

<h1>*Depuracion y Pruebas</h1>
<hr />

<div class="m-1">
    <h3><T Key="0" />:</h3>
    <p>Lorem Ipsum</p>
    <p>Lorem Ipsum</p>
</div>
<hr />

<div class="m-1">
    <h3>*Servicios</h3>
    <p id="salidaServicio">*Condator: @contadorLocal</p>
    <button @onclick="() => sumarPorServicio(1)" class="btn btn-primary">*sumarPorServicio</button>
    <button @onclick="iniciar" class="btn btn-primary">*iniciar</button>
</div>
<hr />

@code
{
    private byte contadorLocal = 0;

    protected override void OnInitialized()
    {
        base.OnInitialized();
    }

    private void iniciar()
    {
        var worker = new TerbinUI_Blazor.Script.Backend.SumWorker();
        _ = worker.IniciarAsync();
    }

    private async Task sumarPorServicio(byte eSumando)
    {
        using var client = new NamedPipeClientStream(".", "SumaPipe", PipeDirection.InOut);

        await client.ConnectAsync();

        // Enviar dos sumandos: el actual y el nuevo
        await client.WriteAsync(new byte[] { contadorLocal, eSumando }, 0, 2);

        // Leer el resultado
        byte[] buffer = new byte[1];
        await client.ReadAsync(buffer, 0, 1);

        //await client.FlushAsync();
        //await client.DisposeAsync();

        contadorLocal = buffer[0];
        StateHasChanged();
    }
}
